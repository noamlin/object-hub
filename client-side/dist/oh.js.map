{"version":3,"sources":["../../node_modules/proxserve/general-functions.js","functions.js","oh.js"],"names":["realtypeof","variable","rawType","Object","prototype","toString","call","substring","length","simpleCloneSet","WeakSet","simpleClone","obj","typeofobj","cloned","add","keys","key","has","i","console","warn","splitPath","path","resultsArr","tmp","char","push","evalPath","object","property","undefined","value","segments","Error","validChangeTypes","areValidChanges","changes","Array","isArray","change","includes","type","hasOwnProperty","isObject","simpleDeepEqual","obj1","obj2","keys1","keys2","val1","val2","xorChanges","matchAgainst","uniqueChanges","slice","changesLoop","againstChange","j","splice","OH_DEBUG","OH","domain","afterInitCallback","clientData","proxserveOptions","id","initiated","changesQueue","client","server","delay","strict","emitReference","socket","io","autoConnect","reconnection","query","data","JSON","stringify","on","Proxserve","onObjectChange","bind","updateObject","parts","currObj","shift","error","reason","concat","emit","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;AACO,SAASA,UAAT,CAAoBC,QAApB,EAA8B;AACpC,MAAIC,OAAO,GAAGC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BL,QAA/B,CAAd,CADoC,CACoB;;AACxD,SAAOC,OAAO,CAACK,SAAR,CAAkB,CAAlB,EAAqBL,OAAO,CAACM,MAAR,GAAiB,CAAtC,CAAP;AACA;AAED;AACA;AACA;AACA;;;AACA,IAAIC,cAAc,GAAG,IAAIC,OAAJ,EAArB;;AACO,SAASC,WAAT,CAAqBC,GAArB,EAA0B;AAChC,MAAIC,SAAS,GAAGb,UAAU,CAACY,GAAD,CAA1B;AACA,MAAIE,MAAJ;;AACA,MAAGD,SAAS,KAAK,QAAjB,EAA2B;AAC1BJ,IAAAA,cAAc,CAACM,GAAf,CAAmBH,GAAnB;AACAE,IAAAA,MAAM,GAAG,EAAT;AACA,QAAIE,IAAI,GAAGb,MAAM,CAACa,IAAP,CAAYJ,GAAZ,CAAX;;AACA,6BAAeI,IAAf,2BAAqB;AAAjB,UAAIC,GAAG,YAAP;;AACH,UAAGR,cAAc,CAACS,GAAf,CAAmBN,GAAG,CAACK,GAAD,CAAtB,CAAH,EAAiC;AAChCH,QAAAA,MAAM,CAACG,GAAD,CAAN,GAAcL,GAAG,CAACK,GAAD,CAAjB;AACA,OAFD,MAGK;AACJH,QAAAA,MAAM,CAACG,GAAD,CAAN,GAAcN,WAAW,CAACC,GAAG,CAACK,GAAD,CAAJ,CAAzB;AACA;AACD;AACD,GAZD,MAaK,IAAGJ,SAAS,KAAK,OAAjB,EAA0B;AAC9BJ,IAAAA,cAAc,CAACM,GAAf,CAAmBH,GAAnB;AACAE,IAAAA,MAAM,GAAG,EAAT;;AACA,SAAI,IAAIK,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGP,GAAG,CAACJ,MAAvB,EAA+BW,CAAC,EAAhC,EAAoC;AACnC,UAAGV,cAAc,CAACS,GAAf,CAAmBN,GAAG,CAACO,CAAD,CAAtB,CAAH,EAA+B;AAC9BL,QAAAA,MAAM,CAACK,CAAD,CAAN,GAAYP,GAAG,CAACO,CAAD,CAAf;AACA,OAFD,MAGK;AACJL,QAAAA,MAAM,CAACK,CAAD,CAAN,GAAYR,WAAW,CAACC,GAAG,CAACO,CAAD,CAAJ,CAAvB;AACA;AACD;AACD,GAXI,MAYA;AAAE;AACNL,IAAAA,MAAM,GAAGF,GAAT;;AAEA,QAAGC,SAAS,KAAK,WAAd,IAA6BA,SAAS,KAAK,MAA3C,IAAqDA,SAAS,KAAK,SAAnE,IAAgFA,SAAS,KAAK,QAA9F,IACAA,SAAS,KAAK,QADd,IAC0BA,SAAS,KAAK,QAD3C,EACqD;AACpDO,MAAAA,OAAO,CAACC,IAAR,0CAA+CR,SAA/C;AACA;AACD;;AAED,SAAOC,MAAP;AACA;AAED;AACA;AACA;AACA;AACA;;;AACO,SAASQ,SAAT,CAAmBC,IAAnB,EAAyB;AAC/B,MAAG,OAAOA,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,KAAK,EAAxC,EAA4C;AAC3C,WAAO,EAAP;AACA;;AAED,MAAIJ,CAAC,GAAG,CAAR;;AACA,MAAGI,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAZ,IAAmBA,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAlC,EAAuC;AACtCJ,IAAAA,CAAC,GAAG,CAAJ,CADsC,CAC/B;AACP;;AAED,MAAIK,UAAU,GAAG,EAAjB;AACA,MAAIC,GAAG,GAAC,EAAR;;AACA,SAAMN,CAAC,GAAGI,IAAI,CAACf,MAAf,EAAuBW,CAAC,EAAxB,EAA4B;AAC3B,QAAIO,IAAI,GAAGH,IAAI,CAACJ,CAAD,CAAf;;AACA,QAAGO,IAAI,KAAK,GAAT,IAAgBA,IAAI,KAAK,GAA5B,EAAiC;AAChCF,MAAAA,UAAU,CAACG,IAAX,CAAgBF,GAAhB;AACAA,MAAAA,GAAG,GAAG,EAAN;AACA,KAHD,MAGO,IAAGC,IAAI,KAAK,GAAZ,EAAiB;AACvBD,MAAAA,GAAG,IAAIC,IAAP;AACA;AACD;;AACD,MAAGD,GAAG,KAAG,EAAT,EAAa;AACZD,IAAAA,UAAU,CAACG,IAAX,CAAgBF,GAAhB;AACA;;AACD,SAAOD,UAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASI,QAAT,CAAkBhB,GAAlB,EAAuBW,IAAvB,EAA6B;AACnC,MAAGA,IAAI,KAAK,EAAZ,EAAgB;AACf,WAAO;AAAEM,MAAAA,MAAM,EAAEjB,GAAV;AAAekB,MAAAA,QAAQ,EAAEC,SAAzB;AAAoCC,MAAAA,KAAK,EAAEpB;AAA3C,KAAP;AACA;;AAED,MAAIqB,QAAQ,GAAGX,SAAS,CAACC,IAAD,CAAxB;AACA,MAAIJ,CAAJ;;AACA,OAAIA,CAAC,GAAG,CAAR,EAAWA,CAAC,IAAIc,QAAQ,CAACzB,MAAT,GAAkB,CAAlC,EAAqCW,CAAC,EAAtC,EAA0C;AAAE;AAC3CP,IAAAA,GAAG,GAAGA,GAAG,CAACqB,QAAQ,CAACd,CAAD,CAAT,CAAT;;AACA,QAAG,OAAOP,GAAP,KAAe,WAAlB,EAA+B;AAC9B,YAAM,IAAIsB,KAAJ,sCAAuCX,IAAvC,QAAN;AACA;AACD;;AACD,SAAO;AAAEM,IAAAA,MAAM,EAAEjB,GAAV;AAAekB,IAAAA,QAAQ,EAAEG,QAAQ,CAACd,CAAD,CAAjC;AAAsCa,IAAAA,KAAK,EAAEpB,GAAG,CAAEqB,QAAQ,CAACd,CAAD,CAAV;AAAhD,GAAP;AACA;;ACpHD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAEA,IAAIgB,gBAAgB,GAAG,CAAC,QAAD,EAAU,QAAV,EAAmB,QAAnB,CAAvB;AAEA;AACA;AACA;AACA;;AACO,SAASC,eAAT,CAAyBC,OAAzB,EAAkC;AACxC,MAAG,CAACC,KAAK,CAACC,OAAN,CAAcF,OAAd,CAAD,IAA2BA,OAAO,CAAC7B,MAAR,KAAmB,CAAjD,EAAoD;AACnD,WAAO,KAAP;AACA;;AAHuC,6CAKtB6B,OALsB;AAAA;;AAAA;AAKxC,wDAA2B;AAAA,UAAnBG,MAAmB;;AAC1B,UAAG,OAAOA,MAAM,CAACjB,IAAd,KAAuB,QAAvB,IACA,CAACY,gBAAgB,CAACM,QAAjB,CAA0BD,MAAM,CAACE,IAAjC,CADD,IAEC,CAACF,MAAM,CAACG,cAAP,CAAsB,OAAtB,CAAD,IAAmCH,MAAM,CAACE,IAAP,KAAgB;AAAU;AAF9D,SAGC,CAACF,MAAM,CAACG,cAAP,CAAsB,UAAtB,CAAD,IAAsCH,MAAM,CAACE,IAAP,KAAgB,QAH1D,EAGqE;AAAC;AACrE,eAAO,KAAP;AACA;AACD;AAZuC;AAAA;AAAA;AAAA;AAAA;;AAcxC,SAAO,IAAP;AACA;;AAED,SAASE,QAAT,CAAkBhC,GAAlB,EAAuB;AACtB,SAAQA,GAAG,KAAK,IAAR,IAAgB,QAAOA,GAAP,MAAe,QAAvC;AACA;;AAEM,SAASiC,eAAT,CAAyBC,IAAzB,EAA+BC,IAA/B,EAAqC;AAC3C,MAAGD,IAAI,KAAKC,IAAZ,EAAkB,OAAO,IAAP;AAElB,MAAG,CAACH,QAAQ,CAACE,IAAD,CAAT,IAAmB,CAACF,QAAQ,CAACG,IAAD,CAA/B,EAAuC,OAAO,KAAP;AAEvC,MAAMC,KAAK,GAAG7C,MAAM,CAACa,IAAP,CAAY8B,IAAZ,CAAd;AACA,MAAMG,KAAK,GAAG9C,MAAM,CAACa,IAAP,CAAY+B,IAAZ,CAAd;;AAEA,MAAIC,KAAK,CAACxC,MAAN,KAAiByC,KAAK,CAACzC,MAA3B,EAAmC;AAClC,WAAO,KAAP;AACA;;AAED,2BAAewC,KAAf,2BAAsB;AAAlB,QAAI/B,GAAG,YAAP;AACH,QAAIiC,IAAI,GAAGJ,IAAI,CAAC7B,GAAD,CAAf;AACA,QAAIkC,IAAI,GAAGJ,IAAI,CAAC9B,GAAD,CAAf;;AAEA,QAAG,CAAC4B,eAAe,CAACK,IAAD,EAAOC,IAAP,CAAnB,EAAiC;AAChC,aAAO,KAAP;AACA;AACD;;AAED,SAAO,IAAP;AACA;AAED;AACA;AACA;AACA;AACA;;;AACO,SAASC,UAAT,CAAoBf,OAApB,EAA6BgB,YAA7B,EAA2C;AACjD,MAAIC,aAAa,GAAGjB,OAAO,CAACkB,KAAR,EAApB;;AAEAC,EAAAA,WAAW,EAAE,KAAI,IAAIrC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGkC,YAAY,CAAC7C,MAAhC,EAAwCW,CAAC,EAAzC,EAA6C;AACzD,QAAIsC,aAAa,GAAGJ,YAAY,CAAClC,CAAD,CAAhC;;AACA,SAAI,IAAIuC,CAAC,GAAGJ,aAAa,CAAC9C,MAAd,GAAuB,CAAnC,EAAsCkD,CAAC,IAAI,CAA3C,EAA8CA,CAAC,EAA/C,EAAmD;AAClD,UAAIlB,MAAM,GAAGc,aAAa,CAACI,CAAD,CAA1B;;AACA,UAAGlB,MAAM,CAACE,IAAP,KAAgBe,aAAa,CAACf,IAA9B,IAAsCF,MAAM,CAACjB,IAAP,KAAgBkC,aAAa,CAAClC;AAAK;AAAzE,UACCiB,MAAM,CAACE,IAAP,KAAgB,QAAhB,IAA4BG,eAAe,CAACL,MAAM,CAACR,KAAR,EAAeyB,aAAa,CAACzB,KAA7B,CAD5C,CAAH,EACqF;AAAE;AACtFsB,QAAAA,aAAa,CAACK,MAAd,CAAqBD,CAArB,EAAwB,CAAxB;AACA,iBAASF,WAAT;AACA;AACD;AACD;;AAED,SAAOF,aAAP;AACA;;ACjFD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AACA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,IAAIM,QAAQ,GAAG,KAAf;;IAEMC;AACL,cAAYC,MAAZ,EAAoBC,iBAApB,EAA+E;AAAA;;AAAA,QAAxCC,UAAwC,uEAA3B,EAA2B;AAAA,QAAvBC,gBAAuB,uEAAJ,EAAI;;AAAA;;AAC9E,SAAKH,MAAL,GAAcA,MAAd;AACA,SAAKI,EAAL;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKC,YAAL,GAAoB;AACnBC,MAAAA,MAAM,EAAE,EADW;;AACP;AACZC,MAAAA,MAAM,EAAE;AAAG;;AAFQ,KAApB;AAKA,SAAKL,gBAAL,GAAwB;AACvBM,MAAAA,KAAK,EAAGN,gBAAgB,CAACM,KAAjB,KAA2BxC,SAA5B,GAAyCkC,gBAAgB,CAACM,KAA1D,GAAkE,EADlD;AAEvBC,MAAAA,MAAM,EAAGP,gBAAgB,CAACO,MAAjB,KAA4BzC,SAA7B,GAA0CkC,gBAAgB,CAACO,MAA3D,GAAoE,IAFrD;AAGvBC,MAAAA,aAAa,EAAGR,gBAAgB,CAACQ,aAAjB,KAAmC1C,SAApC,GAAiDkC,gBAAgB,CAACQ,aAAlE,GAAkF;AAH1E,KAAxB;AAMA,SAAKC,MAAL,GAAcC,EAAE,eAAQb,MAAR,GAAkB;AACjCc,MAAAA,WAAW,EAAE,IADoB;AAEjCC,MAAAA,YAAY,EAAE,IAFmB;AAGjCC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAejB,UAAf;AAAR;AAH0B,KAAlB,CAAhB;AAMA,SAAKU,MAAL,CAAYQ,EAAZ,CAAe,MAAf,EAAuB,UAACH,IAAD,EAAU;AAAE;AAClC,MAAA,KAAI,CAACb,EAAL,GAAUa,IAAI,CAACb,EAAf;;AACA,UAAGa,IAAI,CAACnE,GAAR,EAAa;AACZ,QAAA,KAAI,CAACiB,MAAL,GAAc,IAAIsD,SAAJ,CAAcJ,IAAI,CAACnE,GAAnB,EAAwB,KAAI,CAACqD,gBAA7B,CAAd;;AACA,QAAA,KAAI,CAACpC,MAAL,CAAYqD,EAAZ,CAAe,QAAf,EAAyB,KAAI,CAACE,cAAL,CAAoBC,IAApB,CAAyB,KAAzB,CAAzB,EAFY,CAE8C;;;AAC1D,QAAA,KAAI,CAAClB,SAAL,GAAiB,IAAjB;;AACA,YAAGJ,iBAAH,EAAsB;AACrBA,UAAAA,iBAAiB,CAAC,KAAI,CAAClC,MAAN,CAAjB;AACA;AACD;AACD,KAVD;AAYA,SAAK6C,MAAL,CAAYQ,EAAZ,CAAe,QAAf,EAAyB,UAAC7C,OAAD,EAAa;AACrC,UAAG,KAAI,CAAC8B,SAAR,EAAmB;AAClB,QAAA,KAAI,CAACmB,YAAL,CAAkBjD,OAAlB;AACA;AACD,KAJD;AAKA;AAED;AACD;AACA;AACA;;;;;iCACcA,SAAS;AACrB,UAAG,gCAAgBA,OAAhB,CAAH,EAA6B;AAC5B;AACA;AACA,YAAIiB,aAAa,GAAG,2BAAWjB,OAAX,EAAoB,KAAK+B,YAAL,CAAkBC,MAAtC,CAApB;AACA,aAAKD,YAAL,CAAkBC,MAAlB,GAA2B,EAA3B,CAJ4B,CAIG;;AAJH,mDAKVf,aALU;AAAA;;AAAA;AAK5B,8DAAiC;AAAA,gBAAzBd,MAAyB;AAChC,iBAAK4B,YAAL,CAAkBE,MAAlB,CAAyB3C,IAAzB,CAA8Ba,MAA9B,EADgC,CACO;;AACvC,gBAAI+C,KAAK,GAAGJ,SAAS,CAAC7D,SAAV,CAAoBkB,MAAM,CAACjB,IAA3B,CAAZ;AACA,gBAAIiE,OAAO,GAAG,KAAK3D,MAAnB;;AAEA,mBAAM,OAAO2D,OAAO,CAAED,KAAK,CAAC,CAAD,CAAP,CAAd,KAA+B,WAA/B,IAA8CA,KAAK,CAAC/E,MAAN,GAAe,CAAnE,EAAsE;AACrEgF,cAAAA,OAAO,GAAGA,OAAO,CAAED,KAAK,CAACE,KAAN,EAAF,CAAjB;AACA;;AAED,gBAAGF,KAAK,CAAC/E,MAAN,KAAiB,CAApB,EAAuB;AAAE;AACxB,sBAAOgC,MAAM,CAACE,IAAd;AACC,qBAAK,QAAL;AACA,qBAAK,QAAL;AACC,sBAAGkB,QAAQ,IAAIpB,MAAM,CAACE,IAAP,KAAgB,QAA5B,IAAwC,OAAO8C,OAAO,CAAED,KAAK,CAAC,CAAD,CAAP,CAAd,KAA+B,WAA1E,EAAuF;AACtFnE,oBAAAA,OAAO,CAACC,IAAR,CAAa,qEAAb;AACAD,oBAAAA,OAAO,CAACC,IAAR,CAAamB,MAAb;AACA;;AAED,sBAAG,CAAC,gCAAgBgD,OAAO,CAAED,KAAK,CAAC,CAAD,CAAP,CAAvB,EAAqC/C,MAAM,CAACR,KAA5C,CAAJ,EAAwD;AACvD;AACA;AACA;AACA,wBAAG,QAAOQ,MAAM,CAACR,KAAd,MAAwB,QAA3B,EAAqC;AACpCwD,sBAAAA,OAAO,CAAED,KAAK,CAAC,CAAD,CAAP,CAAP,GAAsB/C,MAAM,CAACR,KAA7B;AACA,qBAFD,MAEO;AACN;AACAwD,sBAAAA,OAAO,CAAED,KAAK,CAAC,CAAD,CAAP,CAAP,GAAsB,mCAAY/C,MAAM,CAACR,KAAnB,CAAtB;AACA;AACD;;AACD;;AACD,qBAAK,QAAL;AACC,yBAAOwD,OAAO,CAAED,KAAK,CAAC,CAAD,CAAP,CAAd;AACA;AAtBF;AAwBA,aAzBD,MAyBO;AACNnE,cAAAA,OAAO,CAACsE,KAAR,CAAc,qCAAd,EAAqDlD,MAArD;AACA;;AAED,gBAAG,OAAOA,MAAM,CAACmD,MAAd,KAAyB,QAAzB,IAAqCnD,MAAM,CAACmD,MAAP,CAAcnF,MAAd,IAAwB,CAAhE,EAAmE;AAClEY,cAAAA,OAAO,CAACC,IAAR,CAAamB,MAAM,CAACjB,IAApB,EAA0BiB,MAAM,CAACmD,MAAjC;AACA;AACD;AA9C2B;AAAA;AAAA;AAAA;AAAA;;AA8C3B;AACD,OA/CD,MA+CO;AACNvE,QAAAA,OAAO,CAACsE,KAAR,CAAc,4CAAd,EAA4DrD,OAA5D;AACA;AACD;AAED;AACD;AACA;AACA;;;;mCACgBA,SAAS;AACvB;AACA;AACA;AACA,UAAIiB,aAAa,GAAG,2BAAWjB,OAAX,EAAoB,KAAK+B,YAAL,CAAkBE,MAAtC,CAApB;AACA,WAAKF,YAAL,CAAkBE,MAAlB,GAA2B,EAA3B,CALuB,CAKQ;;AAE/B,UAAGhB,aAAa,CAAC9C,MAAd,IAAwB,CAA3B,EAA8B;AAC7B,aAAK4D,YAAL,CAAkBC,MAAlB,GAA2B,KAAKD,YAAL,CAAkBC,MAAlB,CAAyBuB,MAAzB,CAAgCtC,aAAhC,CAA3B;AACA,aAAKoB,MAAL,CAAYmB,IAAZ,CAAiB,QAAjB,EAA2BvC,aAA3B;AACA;AACD;;;;;;AACD;AAEDwC,MAAM,CAACC,OAAP,GAAiBA,OAAO,GAAGlC,EAA3B,EAA+B","file":"oh.js","sourceRoot":"../src","sourcesContent":["/**\n * Copyright 2020 Noam Lin <noamlin@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n */\n\"use strict\"\n\n/**\n * return a string representing the full type of the variable\n * @param {*} variable \n * @returns {String} - Object, Array, Number, String, Boolean, Null, Undefined, BigInt, Symbol, Date ...\n */\nexport function realtypeof(variable) {\n\tlet rawType = Object.prototype.toString.call(variable); //[object Object], [object Array], [object Number] ...\n\treturn rawType.substring(8, rawType.length - 1);\n}\n\n/**\n * recursively clones objects and array\n * @param {Proxy|Object|Array} proxy \n */\nlet simpleCloneSet = new WeakSet();\nexport function simpleClone(obj) {\n\tlet typeofobj = realtypeof(obj);\n\tlet cloned;\n\tif(typeofobj === 'Object') {\n\t\tsimpleCloneSet.add(obj);\n\t\tcloned = {};\n\t\tlet keys = Object.keys(obj);\n\t\tfor(let key of keys) {\n\t\t\tif(simpleCloneSet.has(obj[key])) {\n\t\t\t\tcloned[key] = obj[key];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcloned[key] = simpleClone(obj[key]);\n\t\t\t}\n\t\t}\n\t}\n\telse if(typeofobj === 'Array') {\n\t\tsimpleCloneSet.add(obj);\n\t\tcloned = [];\n\t\tfor(let i = 0; i < obj.length; i++) {\n\t\t\tif(simpleCloneSet.has(obj[i])) {\n\t\t\t\tcloned[i] = obj[i];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcloned[i] = simpleClone(obj[i]);\n\t\t\t}\n\t\t}\n\t}\n\telse { //hopefully a primitive\n\t\tcloned = obj;\n\n\t\tif(typeofobj !== 'Undefined' && typeofobj !== 'Null' && typeofobj !== 'Boolean' && typeofobj !== 'Number'\n\t\t&& typeofobj !== 'BigInt' && typeofobj !== 'String') {\n\t\t\tconsole.warn(`Can't clone a variable of type ${typeofobj}`);\n\t\t}\n\t}\n\n\treturn cloned;\n}\n\n/**\n * splits a path to an array of properties\n * (benchmarked and is faster than regex and split())\n * @param {String} path \n */\nexport function splitPath(path) {\n\tif(typeof path !== 'string' || path === '') {\n\t\treturn [];\n\t}\n\t\n\tlet i = 0;\n\tif(path[0] === '.' || path[0] === '[') {\n\t\ti = 1; //loop will skip over openning '.' or '['\n\t}\n\n\tvar resultsArr = [];\n\tvar tmp='';\n\tfor(; i < path.length; i++) {\n\t\tlet char = path[i];\n\t\tif(char === '.' || char === '[') {\n\t\t\tresultsArr.push(tmp);\n\t\t\ttmp = '';\n\t\t} else if(char !== ']') {\n\t\t\ttmp += char;\n\t\t}\n\t}\n\tif(tmp!=='') {\n\t\tresultsArr.push(tmp);\n\t}\n\treturn resultsArr;\n}\n\n/**\n * evaluate a long path and return the designated object and its referred property\n * @param {Object} obj\n * @param {String} path\n * @returns {Object} - returns {object, property, value}\n */\nexport function evalPath(obj, path) {\n\tif(path === '') {\n\t\treturn { object: obj, property: undefined, value: obj };\n\t}\n\n\tlet segments = splitPath(path);\n\tlet i;\n\tfor(i = 0; i <= segments.length - 2; i++) { //iterate until one before last property because they all must exist\n\t\tobj = obj[segments[i]];\n\t\tif(typeof obj === 'undefined') {\n\t\t\tthrow new Error(`Invalid path was given - \"${path}\"`);\n\t\t}\n\t}\n\treturn { object: obj, property: segments[i], value: obj[ segments[i] ] };\n}","/**\n * Copyright 2020 Noam Lin <noamlin@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n */\n\"use strict\"\n\nvar validChangeTypes = ['create','update','delete'];\n\n/**\n * check if received changes is a valid array of changes\n * @param {Array.<Change>} changes \n */\nexport function areValidChanges(changes) {\n\tif(!Array.isArray(changes) || changes.length === 0) {\n\t\treturn false;\n\t}\n\n\tfor(let change of changes) {\n\t\tif(typeof change.path !== 'string'\n\t\t|| !validChangeTypes.includes(change.type)\n\t\t|| (!change.hasOwnProperty('value') && change.type !== 'delete') /*create and update must have a 'value' property*/\n\t\t|| (!change.hasOwnProperty('oldValue') && change.type === 'update')) {/*update must have an 'oldValue' property*/\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction isObject(obj) {\n\treturn (obj !== null && typeof obj === 'object');\n}\n\nexport function simpleDeepEqual(obj1, obj2) {\n\tif(obj1 === obj2) return true;\n\n\tif(!isObject(obj1) || !isObject(obj2)) return false;\n\n\tconst keys1 = Object.keys(obj1);\n\tconst keys2 = Object.keys(obj2);\n\n\tif (keys1.length !== keys2.length) {\n\t\treturn false;\n\t}\n\n\tfor(let key of keys1) {\n\t\tlet val1 = obj1[key];\n\t\tlet val2 = obj2[key];\n\n\t\tif(!simpleDeepEqual(val1, val2)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}\n\n/**\n * match changes list against a secondary changes list and returns only the unique changes of the primary list\n * @param {Array.<Change>} changes\n * @param {Array.<Change>} matchAgainst\n */\nexport function xorChanges(changes, matchAgainst) {\n\tlet uniqueChanges = changes.slice();\n\n\tchangesLoop: for(let i = 0; i < matchAgainst.length; i++) {\n\t\tlet againstChange = matchAgainst[i];\n\t\tfor(let j = uniqueChanges.length - 1; j >= 0; j--) {\n\t\t\tlet change = uniqueChanges[j];\n\t\t\tif(change.type === againstChange.type && change.path === againstChange.path /*probably the same change*/\n\t\t\t&& (change.type === 'delete' || simpleDeepEqual(change.value, againstChange.value))) { //both are delete or both change to the same value\n\t\t\t\tuniqueChanges.splice(j, 1);\n\t\t\t\tcontinue changesLoop;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn uniqueChanges;\n}","/**\n * Copyright 2020 Noam Lin <noamlin@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n */\n\"use strict\"\n\nimport { simpleClone } from '../../node_modules/proxserve/general-functions.js';\nimport { areValidChanges, simpleDeepEqual, xorChanges } from './functions.js';\n\n/**\n * the change object as emitted from Proxserve\n * @typedef {Object} Change - each change emitted from Proxserve\n * @property {String} path - the path from the object listening to the property that changed\n * @property {*} value - the new value that was set\n * @property {*} oldValue - the previous value\n * @property {String} type - the type of change. may be - \"create\"|\"update\"|\"delete\"\n */\n\n//switch for debugging specific behaviors that are not harming or are fixed via one side (client or server)\n//those scripts are too important to delete but the debugging affects performance so it should stay shut down\nlet OH_DEBUG = false;\n\nclass OH {\n\tconstructor(domain, afterInitCallback, clientData = {}, proxserveOptions = {}) {\n\t\tthis.domain = domain;\n\t\tthis.id;\n\t\tthis.initiated = false;\n\t\tthis.changesQueue = {\n\t\t\tclient: [], /*the changes made by the client*/\n\t\t\tserver: [] /*the changes received from the server*/\n\t\t};\n\n\t\tthis.proxserveOptions = {\n\t\t\tdelay: (proxserveOptions.delay !== undefined) ? proxserveOptions.delay : 10,\n\t\t\tstrict: (proxserveOptions.strict !== undefined) ? proxserveOptions.strict : true,\n\t\t\temitReference: (proxserveOptions.emitReference !== undefined) ? proxserveOptions.emitReference : false\n\t\t};\n\t\t\n\t\tthis.socket = io(`/oh-${domain}`, {\n\t\t\tautoConnect: true,\n\t\t\treconnection: true,\n\t\t\tquery: { data: JSON.stringify(clientData) }\n\t\t});\n\n\t\tthis.socket.on('init', (data) => { //gets initiated with data from the server\n\t\t\tthis.id = data.id;\n\t\t\tif(data.obj) {\n\t\t\t\tthis.object = new Proxserve(data.obj, this.proxserveOptions);\n\t\t\t\tthis.object.on('change', this.onObjectChange.bind(this)); //when client alters the object\n\t\t\t\tthis.initiated = true;\n\t\t\t\tif(afterInitCallback) {\n\t\t\t\t\tafterInitCallback(this.object);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.socket.on('change', (changes) => {\n\t\t\tif(this.initiated) {\n\t\t\t\tthis.updateObject(changes);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * changes received from the server\n\t * @param {Array.<Change>} changes \n\t */\n\tupdateObject(changes) {\n\t\tif(areValidChanges(changes)) {\n\t\t\t//prevent infinite loop of:\n\t\t\t//client changes & notify server -> server changes & notify client -> client changes again & notify again..\n\t\t\tlet uniqueChanges = xorChanges(changes, this.changesQueue.client);\n\t\t\tthis.changesQueue.client = []; //check against client-made-changes should happen for only one cycle\n\t\t\tfor(let change of uniqueChanges) {\n\t\t\t\tthis.changesQueue.server.push(change); //save the change - value references might be altered later\n\t\t\t\tlet parts = Proxserve.splitPath(change.path);\n\t\t\t\tlet currObj = this.object;\n\n\t\t\t\twhile(typeof currObj[ parts[0] ] !== 'undefined' && parts.length > 1) {\n\t\t\t\t\tcurrObj = currObj[ parts.shift() ];\n\t\t\t\t}\n\n\t\t\t\tif(parts.length === 1) { //previous loop finished on time\n\t\t\t\t\tswitch(change.type) {\n\t\t\t\t\t\tcase 'create':\n\t\t\t\t\t\tcase 'update':\n\t\t\t\t\t\t\tif(OH_DEBUG && change.type === 'create' && typeof currObj[ parts[0] ] !== 'undefined') {\n\t\t\t\t\t\t\t\tconsole.warn('tried to create a new property but instead updated an existing one:');\n\t\t\t\t\t\t\t\tconsole.warn(change);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(!simpleDeepEqual(currObj[ parts[0] ], change.value)) {\n\t\t\t\t\t\t\t\t//update only if values are completely different. this helps avoid double asigning of new objects.\n\t\t\t\t\t\t\t\t//for example - the client sets a new object {a:1}, then updates the server which in turn updates the\n\t\t\t\t\t\t\t\t//client which will see that the local {a:1} is not the same reference as the server's {a:1}\n\t\t\t\t\t\t\t\tif(typeof change.value !== 'object') {\n\t\t\t\t\t\t\t\t\tcurrObj[ parts[0] ] = change.value;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t//don't point to original 'change.value' so later it will not get altered and then fail on 'xorChanges'\n\t\t\t\t\t\t\t\t\tcurrObj[ parts[0] ] = simpleClone(change.value);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'delete':\n\t\t\t\t\t\t\tdelete currObj[ parts[0] ];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('couldn\\'t loop completely over path', change);\n\t\t\t\t}\n\n\t\t\t\tif(typeof change.reason === 'string' && change.reason.length >= 1) {\n\t\t\t\t\tconsole.warn(change.path, change.reason);\n\t\t\t\t}\n\t\t\t};\n\t\t} else {\n\t\t\tconsole.error('changes received from server are not valid', changes);\n\t\t}\n\t}\n\n\t/**\n\t * changes made by the client\n\t * @param {Array.<Change>} changes \n\t */\n\tonObjectChange(changes) {\n\t\t//work on a copy of 'changes' in order not to change the reference of changes which is also used by client's listeners.\n\t\t//prevent infinite loop of:\n\t\t//server changes & notify client -> client changes & notify server -> server changes again & notify again..\n\t\tlet uniqueChanges = xorChanges(changes, this.changesQueue.server);\n\t\tthis.changesQueue.server = []; //check against server-changes should happen for only one cycle\n\n\t\tif(uniqueChanges.length >= 1) {\n\t\t\tthis.changesQueue.client = this.changesQueue.client.concat(uniqueChanges);\n\t\t\tthis.socket.emit('change', uniqueChanges);\n\t\t}\n\t}\n};\n\nmodule.exports = exports = OH; //makes ParcelJS expose this globally (for all platforms) after bundling everything"]}