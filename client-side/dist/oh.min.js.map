{"version":3,"sources":["../../node_modules/proxserve/general-functions.js","functions.js","../../utils/variables.js","../../utils/globals.js","../../classes/oh/instances.js","../../utils/change-events.js","oh.js"],"names":["realtypeof","variable","rawType","Object","prototype","toString","call","substring","length","simpleCloneSet","WeakSet","simpleClone","obj","typeofobj","cloned","add","keys","key","has","i","console","warn","splitPath","path","resultsArr","tmp","char","push","evalPath","object","property","undefined","value","segments","Error","isObject","simpleDeepEqual","obj1","obj2","keys1","keys2","xorChanges","changes","matchAgainst","uniqueChanges","slice","changesLoop","againstChange","j","change","type","splice","str2VarName","id","acceptableChars","$","_","a","b","c","d","e","f","g","h","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","normalized","shuffle","arr","newArr","Math","floor","random","isNumeric","isNaN","module","exports","defaultBasePermission","permissionsKey","Symbol","for","path2nodeKey","forceEventChangeKey","proxy2instance","WeakMap","instance2proxy","set","proxy","instance","getInstance","get","getProxy","require","ohInstances","validChangeTypes","areValidChanges","Array","isArray","includes","hasOwnProperty","digest","oh","digested","isFirstIteration","filteredChanges","spreadedChanges","permission","permissionTree","requiresDifferentPermissions","currentPermission","compare","typeofchange","oldValue","innerChanges","OH_DEBUG","OH","domain","afterInitCallback","clientData","proxserveOptions","initiated","changesQueue","client","server","delay","strict","emitReference","socket","io","autoConnect","reconnection","query","data","JSON","stringify","on","Proxserve","onObjectChange","bind","updateObject","parts","currObj","shift","error","reason","concat","emit"],"mappings":"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","file":"oh.min.js","sourceRoot":"../src","sourcesContent":["/**\n * Copyright 2020 Noam Lin <noamlin@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n */\n\"use strict\"\n\n/**\n * return a string representing the full type of the variable\n * @param {*} variable \n * @returns {String} - Object, Array, Number, String, Boolean, Null, Undefined, BigInt, Symbol, Date ...\n */\nexport function realtypeof(variable) {\n\tlet rawType = Object.prototype.toString.call(variable); //[object Object], [object Array], [object Number] ...\n\treturn rawType.substring(8, rawType.length - 1);\n}\n\n/**\n * recursively clones objects and array\n * @param {Proxy|Object|Array} proxy \n */\nlet simpleCloneSet = new WeakSet();\nexport function simpleClone(obj) {\n\tlet typeofobj = realtypeof(obj);\n\tlet cloned;\n\tif(typeofobj === 'Object') {\n\t\tsimpleCloneSet.add(obj);\n\t\tcloned = {};\n\t\tlet keys = Object.keys(obj);\n\t\tfor(let key of keys) {\n\t\t\tif(simpleCloneSet.has(obj[key])) {\n\t\t\t\tcloned[key] = obj[key];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcloned[key] = simpleClone(obj[key]);\n\t\t\t}\n\t\t}\n\t}\n\telse if(typeofobj === 'Array') {\n\t\tsimpleCloneSet.add(obj);\n\t\tcloned = [];\n\t\tfor(let i = 0; i < obj.length; i++) {\n\t\t\tif(simpleCloneSet.has(obj[i])) {\n\t\t\t\tcloned[i] = obj[i];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcloned[i] = simpleClone(obj[i]);\n\t\t\t}\n\t\t}\n\t}\n\telse { //hopefully a primitive\n\t\tcloned = obj;\n\n\t\tif(typeofobj !== 'Undefined' && typeofobj !== 'Null' && typeofobj !== 'Boolean' && typeofobj !== 'Number'\n\t\t&& typeofobj !== 'BigInt' && typeofobj !== 'String') {\n\t\t\tconsole.warn(`Can't clone a variable of type ${typeofobj}`);\n\t\t}\n\t}\n\n\treturn cloned;\n}\n\n/**\n * splits a path to an array of properties\n * (benchmarked and is faster than regex and split())\n * @param {String} path \n */\nexport function splitPath(path) {\n\tif(typeof path !== 'string' || path === '') {\n\t\treturn [];\n\t}\n\t\n\tlet i = 0;\n\tif(path[0] === '.' || path[0] === '[') {\n\t\ti = 1; //loop will skip over openning '.' or '['\n\t}\n\n\tvar resultsArr = [];\n\tvar tmp='';\n\tfor(; i < path.length; i++) {\n\t\tlet char = path[i];\n\t\tif(char === '.' || char === '[') {\n\t\t\tresultsArr.push(tmp);\n\t\t\ttmp = '';\n\t\t} else if(char !== ']') {\n\t\t\ttmp += char;\n\t\t}\n\t}\n\tif(tmp!=='') {\n\t\tresultsArr.push(tmp);\n\t}\n\treturn resultsArr;\n}\n\n/**\n * evaluate a long path and return the designated object and its referred property\n * @param {Object} obj\n * @param {String} path\n * @returns {Object} - returns {object, property, value}\n */\nexport function evalPath(obj, path) {\n\tif(path === '') {\n\t\treturn { object: obj, property: undefined, value: obj };\n\t}\n\n\tlet segments = splitPath(path);\n\tlet i;\n\tfor(i = 0; i <= segments.length - 2; i++) { //iterate until one before last property because they all must exist\n\t\tobj = obj[segments[i]];\n\t\tif(typeof obj === 'undefined') {\n\t\t\tthrow new Error(`Invalid path was given - \"${path}\"`);\n\t\t}\n\t}\n\treturn { object: obj, property: segments[i], value: obj[ segments[i] ] };\n}","/**\n * Copyright 2020 Noam Lin <noamlin@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n */\n\"use strict\"\n\nfunction isObject(obj) {\n\treturn (obj !== null && typeof obj === 'object');\n}\n\nexport function simpleDeepEqual(obj1, obj2) {\n\tif(obj1 === obj2) return true;\n\n\tif(!isObject(obj1) || !isObject(obj2)) return false;\n\n\tconst keys1 = Object.keys(obj1);\n\tconst keys2 = Object.keys(obj2);\n\n\tif (keys1.length !== keys2.length) {\n\t\treturn false;\n\t}\n\n\tfor(let key of keys1) {\n\t\tlet val1 = obj1[key];\n\t\tlet val2 = obj2[key];\n\n\t\tif(!simpleDeepEqual(val1, val2)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}\n\n/**\n * match changes list against a secondary changes list and returns only the unique changes of the primary list\n * @param {Array.<Change>} changes\n * @param {Array.<Change>} matchAgainst\n */\nexport function xorChanges(changes, matchAgainst) {\n\tlet uniqueChanges = changes.slice();\n\n\tchangesLoop: for(let i = 0; i < matchAgainst.length; i++) {\n\t\tlet againstChange = matchAgainst[i];\n\t\tfor(let j = uniqueChanges.length - 1; j >= 0; j--) {\n\t\t\tlet change = uniqueChanges[j];\n\t\t\tif(change.type === againstChange.type && change.path === againstChange.path /*probably the same change*/\n\t\t\t&& (change.type === 'delete' || simpleDeepEqual(change.value, againstChange.value))) { //both are delete or both change to the same value\n\t\t\t\tuniqueChanges.splice(j, 1);\n\t\t\t\tcontinue changesLoop;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn uniqueChanges;\n}","/**\n * utilities for variables manipulations and type reading\n */\n\"use strict\";\n\nfunction str2VarName(id) {\n\tlet acceptableChars = {\n\t\tsigns: {$:1, _:1},\n\t\tdigits: {'0':1,'1':1,'2':1,'3':1,'4':1,'5':1,'6':1,'7':1,'8':1,'9':1},\n\t\tlowercase: {a:1,b:1,c:1,d:1,e:1,f:1,g:1,h:1,i:1,j:1,k:1,l:1,m:1,n:1,o:1,p:1,q:1,r:1,s:1,t:1,u:1,v:1,w:1,x:1,y:1,z:1},\n\t\tuppercase: {A:1,B:1,C:1,D:1,E:1,F:1,G:1,H:1,I:1,J:1,K:1,L:1,M:1,N:1,O:1,P:1,Q:1,R:1,S:1,T:1,U:1,V:1,W:1,X:1,Y:1,Z:1}\n\t};\n\n\tlet normalized = '';\n\n\tfor(let i = 0; i < id.length; i++) {\n\t\tif(id[i] in acceptableChars.signs || id[i] in acceptableChars.digits || id[i] in acceptableChars.lowercase || id[i] in acceptableChars.uppercase) {\n\t\t\tnormalized += id[i];\n\t\t}\n\t}\n\n\tif(normalized.length === 0 || normalized.substring(0,1) in acceptableChars.digits) {\n\t\tnormalized = '_' + normalized;\n\t}\n\n\treturn normalized;\n}\n\n/**\n * shuffles an array using the modern version of the Fisher–Yates shuffle\n * @param {Array} arr - the array to shuffle\n */\nfunction shuffle(arr) {\n\tlet i, j, tmp, newArr = [...arr];\n\tfor(i = newArr.length - 1; i > 0; i--) {\n\t\tj = Math.floor(Math.random() * (i + 1));\n\t\ttmp = newArr[i];\n\t\tnewArr[i] = newArr[j];\n\t\tnewArr[j] = tmp;\n\t}\n\treturn newArr;\n}\n\n/**\n * return a string representing the full type of the variable\n * @param {*} variable \n * @returns {String} - 'Object', 'Array', 'Number', 'String', 'Boolean', 'Null', 'Undefined', 'BigInt', 'Symbol', 'Date' ...\n */\nfunction realtypeof(variable) {\n\tlet rawType = Object.prototype.toString.call(variable); //[object Object], [object Array], [object Number] ...\n\treturn rawType.substring(8, rawType.length - 1);\n}\n\n/**\n * check if variable is a number or a string of a number\n * @param {*} variable \n */\nfunction isNumeric(variable) {\n\tif(typeof variable === 'string' && variable === '') return false;\n\telse return !isNaN(variable);\n}\n\nmodule.exports = exports = {\n\tstr2VarName: str2VarName,\n\tshuffle: shuffle,\n\trealtypeof: realtypeof,\n\tisNumeric: isNumeric\n};","/**\n * global variables and symbols\n */\n\"use strict\";\n\nmodule.exports = exports = {\n\tdefaultBasePermission: 0, /*default permission that all clients are automatically assigned to*/\n\tpermissionsKey: Symbol.for('permissions_property'), /*special key to get into the permissions when in the permission-tree nodes*/\n\tpath2nodeKey: Symbol.for('path2node_property'), /*special key for the path-to-node map that is at the root of a PermissionTree*/\n\tforceEventChangeKey: '__forceEventChangeKey' /*key for forcing a change on the proxy. this will be used to run code inside the change-loop*/\n};","\"use strict\"\n\nvar proxy2instance = new WeakMap();\nvar instance2proxy = new WeakMap();\n\nmodule.exports = exports = {\n\t/**\n\t * set a new entry of proxy->instance in the proxies map\n\t * @param {Proxy} proxy \n\t * @param {Object} instance \n\t */\n\tset: function(proxy, instance) {\n\t\tproxy2instance.set(proxy, instance);\n\t\tinstance2proxy.set(instance, proxy);\n\t},\n\t/**\n\t * get instance by proxy\n\t * @param {Proxy} proxy \n\t */\n\tgetInstance: function(proxy) {\n\t\treturn proxy2instance.get(proxy);\n\t},\n\t/**\n\t * get proxy by instance\n\t * @param {Object} instance \n\t */\n\tgetProxy: function(instance) {\n\t\treturn instance2proxy.get(instance);\n\t}\n};","/**\n * utilities for change-events\n */\n\"use strict\";\n\nconst { realtypeof } = require('./variables.js');\nconst { forceEventChangeKey } = require('../utils/globals.js');\nconst ohInstances = require('../classes/oh/instances.js');\n\nvar validChangeTypes = ['create','update','delete'];\n\n/**\n * check if received changes is a valid array of changes\n * @param {Array.<Change>} changes \n */\nfunction areValidChanges(changes) {\n\tif(!Array.isArray(changes) || changes.length === 0) {\n\t\treturn false;\n\t}\n\n\tfor(let change of changes) {\n\t\tif(typeof change.path !== 'string'\n\t\t|| !validChangeTypes.includes(change.type)\n\t\t|| (!change.hasOwnProperty('value') && change.type !== 'delete') /*create and update must have a 'value' property*/\n\t\t|| (!change.hasOwnProperty('oldValue') && change.type === 'update')) {/*update must have an 'oldValue' property*/\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * the change object as emitted from Proxserve\n * @typedef {Object} Change - each change emitted from Proxserve\n * @property {String} path - the path from the object listening to the property that changed\n * @property {*} value - the new value that was set\n * @property {*} oldValue - the previous value\n * @property {String} type - the type of change. may be - \"create\"|\"update\"|\"delete\"\n */\n/**\n * analyzes the changes before traversing them:\n * - extracting system reserved properties\n * - spreads an array of event-changes to a more verbose array of changes by transforming the\n *   creation of objects or arrays into individual changes of each property.\n * - comparing all possible permissions\n * @param {Array.<Change>} changes\n * @param {Object} oh\n * @param {Object} type - whether to compare required permissions of 'read' or 'write'\n * @param {Object} [digested] - already digested parts\n */\nfunction digest(changes, oh, type, digested) {\n\tif(!areValidChanges(changes)) {\n\t\tthrow new Error('Invalid changes were given');\n\t}\n\n\tlet isFirstIteration = false;\n\n\tif(typeof digested === 'undefined') { //happens only on the first iteration of the recursion\n\t\tisFirstIteration = true;\n\t\t\n\t\tdigested = {\n\t\t\tfilteredChanges: [],\n\t\t\tspreadedChanges: [],\n\t\t\tpermission: oh.permissionTree.get(changes[0].path),\n\t\t\trequiresDifferentPermissions: false\n\t\t};\n\t}\n\n\tfor(let i = 0; i < changes.length; i++) {\n\t\tlet change = changes[i];\n\n\t\tif(isFirstIteration) {\n\t\t\tif(change.path === `.${forceEventChangeKey}`) {\n\t\t\t\tif(change.type !== 'delete') {\n\t\t\t\t\tlet proxy = ohInstances.getProxy(oh);\n\t\t\t\t\tdelete proxy[forceEventChangeKey];\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdigested.filteredChanges.push(change);\n\t\t\t}\n\t\t}\n\t\t\n\t\t//check if permission is different between changes. inner changes will be check during the recursion\n\t\tif(digested.requiresDifferentPermissions === false) {\n\t\t\tlet currentPermission = oh.permissionTree.get(change.path);\n\t\t\tif(oh.permissionTree.compare(digested.permission, currentPermission, type) === false) {\n\t\t\t\tdigested.requiresDifferentPermissions = true;\n\t\t\t}\n\t\t}\n\n\t\tlet typeofchange = realtypeof(change.value);\n\n\t\tif((change.type === 'create' || change.type === 'update') && typeofchange === 'Object') {\n\t\t\tdigested.spreadedChanges.push({ path: change.path, type: change.type, oldValue: change.oldValue, value: {} }); //shallow change\n\n\t\t\tlet innerChanges = [];\n\t\t\tlet keys = Object.keys(change.value);\n\t\t\tfor(let key of keys) {\n\t\t\t\tinnerChanges.push({ path: `${change.path}.${key}`, type: 'create', oldValue: undefined, value: change.value[key] });\n\t\t\t}\n\t\t\t\n\t\t\tif(innerChanges.length > 0) {\n\t\t\t\tdigest(innerChanges, oh, type, digested);\n\t\t\t}\n\t\t}\n\t\telse if((change.type === 'create' || change.type === 'update') && typeofchange === 'Array') {\n\t\t\tdigested.spreadedChanges.push({ path: change.path, type: change.type, oldValue: change.oldValue, value: [] }); //shallow change\n\t\t\tlet innerChanges = [];\n\t\t\tfor(let i=0; i < change.value.length; i++) {\n\t\t\t\tinnerChanges.push({ path: `${change.path}[${i}]`, type: 'create', oldValue: undefined, value: change.value[i] });\n\t\t\t}\n\n\t\t\tif(innerChanges.length > 0) {\n\t\t\t\tdigest(innerChanges, oh, type, digested);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdigested.spreadedChanges.push(change);\n\t\t}\n\t}\n\n\treturn digested;\n}\n\nmodule.exports = exports = {\n\tareValidChanges: areValidChanges,\n\tdigest: digest\n};","/**\n * Copyright 2020 Noam Lin <noamlin@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n */\n\"use strict\"\n\nimport { simpleClone } from '../../node_modules/proxserve/general-functions.js';\nimport { simpleDeepEqual, xorChanges } from './functions.js';\nimport { areValidChanges } from '../../utils/change-events.js';\n\n/**\n * the change object as emitted from Proxserve\n * @typedef {Object} Change - each change emitted from Proxserve\n * @property {String} path - the path from the object listening to the property that changed\n * @property {*} value - the new value that was set\n * @property {*} oldValue - the previous value\n * @property {String} type - the type of change. may be - \"create\"|\"update\"|\"delete\"\n */\n\n//switch for debugging specific behaviors that are not harming or are fixed via one side (client or server)\n//those scripts are too important to delete but the debugging affects performance so it should stay shut down\nlet OH_DEBUG = false;\n\nclass OH {\n\tconstructor(domain, afterInitCallback, clientData = {}, proxserveOptions = {}) {\n\t\tthis.domain = domain;\n\t\tthis.id;\n\t\tthis.initiated = false;\n\t\tthis.changesQueue = {\n\t\t\tclient: [], /*the changes made by the client*/\n\t\t\tserver: [] /*the changes received from the server*/\n\t\t};\n\n\t\tthis.proxserveOptions = {\n\t\t\tdelay: (proxserveOptions.delay !== undefined) ? proxserveOptions.delay : 10,\n\t\t\tstrict: (proxserveOptions.strict !== undefined) ? proxserveOptions.strict : true,\n\t\t\temitReference: (proxserveOptions.emitReference !== undefined) ? proxserveOptions.emitReference : false\n\t\t};\n\t\t\n\t\tthis.socket = io(`/oh-${domain}`, {\n\t\t\tautoConnect: true,\n\t\t\treconnection: true,\n\t\t\tquery: { data: JSON.stringify(clientData) }\n\t\t});\n\n\t\tthis.socket.on('init', (data) => { //gets initiated with data from the server\n\t\t\tthis.id = data.id;\n\t\t\tif(data.obj) {\n\t\t\t\tthis.object = new Proxserve(data.obj, this.proxserveOptions);\n\t\t\t\tthis.object.on('change', this.onObjectChange.bind(this)); //when client alters the object\n\t\t\t\tthis.initiated = true;\n\t\t\t\tif(afterInitCallback) {\n\t\t\t\t\tafterInitCallback(this.object);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.socket.on('change', (changes) => {\n\t\t\tif(this.initiated) {\n\t\t\t\tthis.updateObject(changes);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * changes received from the server\n\t * @param {Array.<Change>} changes \n\t */\n\tupdateObject(changes) {\n\t\tif(areValidChanges(changes)) {\n\t\t\t//prevent infinite loop of:\n\t\t\t//client changes & notify server -> server changes & notify client -> client changes again & notify again..\n\t\t\tlet uniqueChanges = xorChanges(changes, this.changesQueue.client);\n\t\t\tthis.changesQueue.client = []; //check against client-made-changes should happen for only one cycle\n\t\t\tfor(let change of uniqueChanges) {\n\t\t\t\tthis.changesQueue.server.push(change); //save the change - value references might be altered later\n\t\t\t\tlet parts = Proxserve.splitPath(change.path);\n\t\t\t\tlet currObj = this.object;\n\n\t\t\t\twhile(typeof currObj[ parts[0] ] !== 'undefined' && parts.length > 1) {\n\t\t\t\t\tcurrObj = currObj[ parts.shift() ];\n\t\t\t\t}\n\n\t\t\t\tif(parts.length === 1) { //previous loop finished on time\n\t\t\t\t\tswitch(change.type) {\n\t\t\t\t\t\tcase 'create':\n\t\t\t\t\t\tcase 'update':\n\t\t\t\t\t\t\tif(OH_DEBUG && change.type === 'create' && typeof currObj[ parts[0] ] !== 'undefined') {\n\t\t\t\t\t\t\t\tconsole.warn('tried to create a new property but instead updated an existing one:');\n\t\t\t\t\t\t\t\tconsole.warn(change);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(!simpleDeepEqual(currObj[ parts[0] ], change.value)) {\n\t\t\t\t\t\t\t\t//update only if values are completely different. this helps avoid double asigning of new objects.\n\t\t\t\t\t\t\t\t//for example - the client sets a new object {a:1}, then updates the server which in turn updates the\n\t\t\t\t\t\t\t\t//client which will see that the local {a:1} is not the same reference as the server's {a:1}\n\t\t\t\t\t\t\t\tif(typeof change.value !== 'object') {\n\t\t\t\t\t\t\t\t\tcurrObj[ parts[0] ] = change.value;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t//don't point to original 'change.value' so later it will not get altered and then fail on 'xorChanges'\n\t\t\t\t\t\t\t\t\tcurrObj[ parts[0] ] = simpleClone(change.value);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'delete':\n\t\t\t\t\t\t\tdelete currObj[ parts[0] ];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('couldn\\'t loop completely over path', change);\n\t\t\t\t}\n\n\t\t\t\tif(typeof change.reason === 'string' && change.reason.length >= 1) {\n\t\t\t\t\tconsole.warn(change.path, change.reason);\n\t\t\t\t}\n\t\t\t};\n\t\t} else {\n\t\t\tconsole.error('changes received from server are not valid', changes);\n\t\t}\n\t}\n\n\t/**\n\t * changes made by the client\n\t * @param {Array.<Change>} changes \n\t */\n\tonObjectChange(changes) {\n\t\t//work on a copy of 'changes' in order not to change the reference of changes which is also used by client's listeners.\n\t\t//prevent infinite loop of:\n\t\t//server changes & notify client -> client changes & notify server -> server changes again & notify again..\n\t\tlet uniqueChanges = xorChanges(changes, this.changesQueue.server);\n\t\tthis.changesQueue.server = []; //check against server-changes should happen for only one cycle\n\n\t\tif(uniqueChanges.length >= 1) {\n\t\t\tthis.changesQueue.client = this.changesQueue.client.concat(uniqueChanges);\n\t\t\tthis.socket.emit('change', uniqueChanges);\n\t\t}\n\t}\n};\n\nmodule.exports = exports = OH; //makes ParcelJS expose this globally (for all platforms) after bundling everything"]}